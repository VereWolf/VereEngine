//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer $Globals
{
    float   c = 0.100000001;            // Offset:    0, size:    4
    float4  org = { 0.829999983, 0.50999999, 0.219999999, 1 };// Offset:   16, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gViewProj;                 // Offset:   64, size:   64
    float4  gSkyColor;                  // Offset:  128, size:   16
    float3  gSunVector;                 // Offset:  144, size:   12
    float   gLight;                     // Offset:  156, size:    4
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 LightTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float c;                           // Offset:    0 Size:     4
                //      = 0x3dcccccd 
                //   float4 org;                        // Offset:   16 Size:    16 [unused]
                //      = 0x3f547ae1 0x3f028f5c 0x3e6147ae 0x3f800000 
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gViewProj;                // Offset:   64 Size:    64
                //   float4 gSkyColor;                  // Offset:  128 Size:    16 [unused]
                //   float3 gSunVector;                 // Offset:  144 Size:    12 [unused]
                //   float gLight;                      // Offset:  156 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // $Globals                          cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[1], immediateIndexed
                dcl_constantbuffer CB1[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   o3.x <- <VS return value>.Tex.x; o3.y <- <VS return value>.Tex.y; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 33 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_05_11\VereEngine\VereEngine\FX\SkyBox.fx"
                mov r0.xy, v1.xyxx  // r0.x <- vout.Tex.x; r0.y <- vout.Tex.y
                dp3 r0.z, v0.xyzx, v0.xyzx
                rsq r0.z, r0.z
                mul r1.xyz, r0.zzzz, v0.xyzx  // r1.x <- vout.NormalW.x; r1.y <- vout.NormalW.y; r1.z <- vout.NormalW.z
                mov r2.xyz, v0.xyzx
                mov r2.w, l(1.000000)
                dp4 r3.x, r2.xyzw, cb1[0].xyzw  // r3.x <- vout.PosW.x
                dp4 r3.y, r2.xyzw, cb1[1].xyzw  // r3.y <- vout.PosW.y
                dp4 r3.z, r2.xyzw, cb1[2].xyzw  // r3.z <- vout.PosW.z
                mov r3.w, l(1.000000)
                dp4 r2.x, r3.xyzw, cb1[4].xyzw  // r2.x <- vout.PosH.x
                dp4 r2.y, r3.xyzw, cb1[5].xyzw  // r2.y <- vout.PosH.y
                dp4 r2.w, r3.xyzw, cb1[7].xyzw  // r2.w <- vout.PosH.w
                mul r0.z, r2.w, cb0[0].x
                add r0.z, r0.z, l(1.000000)
                log r0.z, r0.z
                mul r0.z, r0.z, l(0.693147)
                mul r0.w, cb0[0].x, l(20000.000000)
                add r0.w, r0.w, l(1.000000)
                log r0.w, r0.w
                mul r0.w, r0.w, l(0.693147)
                div r0.z, r0.z, r0.w
                mul r0.z, r2.w, r0.z  // r0.z <- vout.PosH.z
                mov o0.xyw, r2.xyxw
                mov o0.z, r0.z
                mov o1.xyz, r3.xyzx
                mov o2.xyz, r1.xyzx
                mov o3.xy, r0.xyxx
                ret 
                // Approximately 29 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float c;                           // Offset:    0 Size:     4 [unused]
                //      = 0x3dcccccd 
                //   float4 org;                        // Offset:   16 Size:    16
                //      = 0x3f547ae1 0x3f028f5c 0x3e6147ae 0x3f800000 
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
                //   float4 gSkyColor;                  // Offset:  128 Size:    16
                //   float3 gSunVector;                 // Offset:  144 Size:    12
                //   float gLight;                      // Offset:  156 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // $Globals                          cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[2], immediateIndexed
                dcl_constantbuffer CB1[10], immediateIndexed
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.Tex.x; v3.y <- pin.Tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 45 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_05_11\VereEngine\VereEngine\FX\SkyBox.fx"
                nop 
                mov r0.xyz, v2.xyzx
                mov r1.xyz, cb1[9].xyzx
                mov r2.xyzw, cb1[8].xyzw
                mov r0.w, cb1[9].w
                mov r1.w, cb0[1].x
                
                #line 231 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_05_11\VereEngine\VereEngine\FX\LightHelper.fx"
                mov r3.xyz, l(0,-1.000000,0,0)  // r3.x <- bottom.x; r3.y <- bottom.y; r3.z <- bottom.z
                dp3 r3.x, r0.xyzx, r3.xyzx
                add r3.x, r3.x, l(0.400000)
                mul r3.x, r3.x, l(0.714000)
                max r3.x, r3.x, l(0.000000)  // r3.x <- B
                dp3 r0.x, r0.xyzx, r1.xyzx  // r0.x <- S
                mul r0.y, r0.x, l(6.000000)
                max r0.y, r0.y, l(5.000000)
                mov r0.z, l(-5.000000)
                add r0.y, r0.z, r0.y
                max r0.y, r0.y, l(0.000000)
                min r0.y, r0.y, l(1.000000)
                mov r0.z, -r0.y
                max r1.x, r0.z, r0.y
                mov r1.y, -r1.x
                add r1.y, r1.y, l(1.000000)
                sqrt r1.y, r1.y
                mul r1.z, r1.x, l(-0.018729)
                add r1.z, r1.z, l(0.074261)
                mul r1.z, r1.x, r1.z
                add r1.z, r1.z, l(-0.212114)
                mul r1.x, r1.x, r1.z
                add r1.x, r1.x, l(1.570729)
                mul r1.x, r1.y, r1.x
                mul r1.y, r1.x, l(-2.000000)
                add r1.y, r1.y, l(3.141593)
                lt r0.y, r0.y, r0.z
                and r0.y, r0.y, r1.y
                add r0.y, r0.y, r1.x
                mov r0.y, -r0.y
                add r0.y, r0.y, l(1.570796)
                mul r0.y, r0.y, l(0.600000)  // r0.y <- SUN
                mov r0.z, -r3.x
                add r0.z, r0.z, l(1.000000)
                mul r2.xyzw, r2.xyzw, r0.zzzz
                mul r0.z, r1.w, r3.x
                add r1.xyzw, r0.zzzz, r2.xyzw
                add r0.x, r0.x, l(1.500000)
                min r0.x, r0.x, l(1.000000)
                mul r1.xyzw, r0.xxxx, r1.xyzw
                mul r1.xyzw, r0.wwww, r1.xyzw  // r1.x <- C.x; r1.y <- C.y; r1.z <- C.z; r1.w <- C.w
                add r0.x, r0.y, r1.x
                min r1.x, r0.x, l(1.000000)
                mul r0.x, r0.y, l(0.900000)
                add r0.x, r0.x, r1.y
                min r1.y, r0.x, l(1.000000)
                mul r0.x, r0.y, l(0.500000)
                add r0.x, r0.x, r1.z
                min r1.z, r0.x, l(1.000000)
                mov r1.x, r1.x  // r1.x <- <SkyLight return value>.x
                mov r1.y, r1.y  // r1.y <- <SkyLight return value>.y
                mov r1.z, r1.z  // r1.z <- <SkyLight return value>.z
                mov r1.w, r1.w  // r1.w <- <SkyLight return value>.w
                
                #line 45 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_05_11\VereEngine\VereEngine\FX\SkyBox.fx"
                mov o0.xyzw, r1.xyzw
                ret 
                // Approximately 61 instruction slots used
                            
            };
        }

    }

}

