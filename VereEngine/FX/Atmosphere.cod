//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer $Globals
{
    float   c = 0.100000001;            // Offset:    0, size:    4
}

cbuffer cbPerFrame
{
    float3  gEyePosW;                   // Offset:    0, size:   12
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gViewProj;                 // Offset:   64, size:   64
    float   gSpacing;                   // Offset:  128, size:    4
    float3  gCentrePos;                 // Offset:  132, size:   12
    float   gFogStart;                  // Offset:  144, size:    4
    float   gFogRange;                  // Offset:  148, size:    4
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 LightTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float c;                           // Offset:    0 Size:     4
                //      = 0x3dcccccd 
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gViewProj;                // Offset:   64 Size:    64
                //   float gSpacing;                    // Offset:  128 Size:     4 [unused]
                //   float3 gCentrePos;                 // Offset:  132 Size:    12
                //   float gFogStart;                   // Offset:  144 Size:     4 [unused]
                //   float gFogRange;                   // Offset:  148 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // $Globals                          cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xyz         1     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xyz         2     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[1], immediateIndexed
                dcl_constantbuffer CB1[9], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; v1.z <- vin.Tex.z; 
                //   o2.x <- <VS return value>.Tex.x; o2.y <- <VS return value>.Tex.y; o2.z <- <VS return value>.Tex.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 35 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_05_11\VereEngine\VereEngine\FX\Atmosphere.fx"
                mov r0.xyz, v1.xyzx  // r0.x <- vout.Tex.x; r0.y <- vout.Tex.y; r0.z <- vout.Tex.z
                mov r1.xyz, v0.xyzx
                mov r1.w, l(1.000000)
                dp4 r2.x, r1.xyzw, cb1[0].xyzw  // r2.x <- vout.PosW.x
                dp4 r2.y, r1.xyzw, cb1[1].xyzw  // r2.y <- vout.PosW.y
                dp4 r2.z, r1.xyzw, cb1[2].xyzw  // r2.z <- vout.PosW.z
                mov r1.xyz, -cb1[8].yzwy
                add r1.xyz, r1.xyzx, r2.xyzx
                mov r3.xyz, -r1.xyzx
                max r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- P.x; r1.y <- P.y; r1.z <- P.z
                mov r1.x, r1.x  // r1.x <- R
                lt r0.w, r1.x, r1.y
                if_nz r0.w
                  mov r1.x, r1.y
                
                #line 46
                endif 
                lt r0.w, r1.x, r1.z
                if_nz r0.w
                  mov r1.x, r1.z
                endif 
                mov r1.yzw, -cb1[8].yyzw
                add r1.yzw, r1.yyzw, r2.xxyz
                dp3 r0.w, r1.yzwy, r1.yzwy
                rsq r0.w, r0.w
                mul r1.yzw, r0.wwww, r1.yyzw
                mul r1.xyz, r1.yzwy, r1.xxxx
                add r1.xyz, r1.xyzx, cb1[8].yzwy  // r1.x <- vout.PosW.x; r1.y <- vout.PosW.y; r1.z <- vout.PosW.z
                mov r1.w, l(1.000000)
                dp4 r2.x, r1.xyzw, cb1[4].xyzw  // r2.x <- vout.PosH.x
                dp4 r2.y, r1.xyzw, cb1[5].xyzw  // r2.y <- vout.PosH.y
                dp4 r2.w, r1.xyzw, cb1[7].xyzw  // r2.w <- vout.PosH.w
                
                #line 57
                mul r0.w, r2.w, cb0[0].x
                add r0.w, r0.w, l(1.000000)
                log r0.w, r0.w
                mul r0.w, r0.w, l(0.693147)
                mul r1.w, cb0[0].x, l(999999995904.000000)
                add r1.w, r1.w, l(1.000000)
                log r1.w, r1.w
                mul r1.w, r1.w, l(0.693147)
                div r0.w, r0.w, r1.w
                mul r0.w, r2.w, r0.w  // r0.w <- vout.PosH.z
                mov o0.xyw, r2.xyxw
                mov o0.z, r0.w
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                ret 
                // Approximately 45 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // TEXCOORD                 0   xyz         2     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.Tex.x; v2.y <- pin.Tex.y; v2.z <- pin.Tex.z; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 64 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_05_11\VereEngine\VereEngine\FX\Atmosphere.fx"
                mov r0.xyzw, l(0.100000,0.300000,1.000000,0.200000)  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w
                
                #line 71
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 3 instruction slots used
                            
            };
        }

    }

}

