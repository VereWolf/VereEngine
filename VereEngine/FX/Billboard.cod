//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer $Globals
{
    float   c = 0.100000001;            // Offset:    0, size:    4
}

cbuffer cbPerFrame
{
    float   gRenderStart;               // Offset:    0, size:    4
    float   gRenderEnd;                 // Offset:    4, size:    4
    float3  gFogColor;                  // Offset:   16, size:   12
    float   gFogStart;                  // Offset:   28, size:    4
    float   gFogRange;                  // Offset:   32, size:    4
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gViewProj;                 // Offset:   64, size:   64
    int2    gCoord;                     // Offset:  128, size:    8
    float   gSpacing;                   // Offset:  136, size:    4
}

//
// 6 local object(s)
//
SamplerState samHeightMap
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState samNormalMap
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
SamplerState samTreesMap
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
Texture2D gHeightMap;
Texture2D gNormalMap;
Texture2D gTreesMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 LightTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
                //   int2 gCoord;                       // Offset:  128 Size:     8 [unused]
                //   float gSpacing;                    // Offset:  136 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                // TEXCOORD                 0     zw        1     NONE   float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[3], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_output o1.zw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosW.x; v0.y <- vin.PosW.y; v0.z <- vin.PosW.z; 
                //   v1.x <- vin.SizeW.x; v1.y <- vin.SizeW.y; 
                //   v2.x <- vin.TexTess.x; v2.y <- vin.TexTess.y; 
                //   o1.x <- <VS return value>.SizeW.x; o1.y <- <VS return value>.SizeW.y; o1.z <- <VS return value>.TexTess.x; o1.w <- <VS return value>.TexTess.y; 
                //   o0.x <- <VS return value>.CenterW.x; o0.y <- <VS return value>.CenterW.y; o0.z <- <VS return value>.CenterW.z
                //
                #line 80 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\Billboard.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.CenterW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.CenterW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.CenterW.z
                mov r0.xy, v1.xyxx  // r0.x <- vout.SizeW.x; r0.y <- vout.SizeW.y
                mov r0.zw, v2.xxxy  // r0.z <- vout.TexTess.x; r0.w <- vout.TexTess.y
                mov o1.xy, r0.xyxx
                mov o1.zw, r0.zzzw
                mov o0.xyz, r1.xyzx
                ret 
                // Approximately 11 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float c;                           // Offset:    0 Size:     4
                //      = 0x3dcccccd 
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64
                //   int2 gCoord;                       // Offset:  128 Size:     8
                //   float gSpacing;                    // Offset:  136 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samHeightMap                      sampler      NA          NA             s0      1 
                // gHeightMap                        texture  float4          2d             t0      1 
                // $Globals                          cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                // TEXCOORD                 0     zw        1     NONE   float     zw
                // SV_PrimitiveID           0    N/A   primID   PRIMID    uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // SV_PrimitiveID           0   x           3   PRIMID    uint   x   
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[1], immediateIndexed
                dcl_constantbuffer CB1[9], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_input v[1][1].zw
                dcl_input vPrim
                dcl_temps 6
                dcl_indexableTemp x0[4], 4
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output_sgv o3.x, primitive_id
                dcl_output o4.xy
                dcl_maxout 4
                //
                // Initial variable locations:
                //   vPrim <- primID; 
                //   m0 <- triStream; 
                //   v[0][0].x <- gin[0].CenterW.x; v[0][0].y <- gin[0].CenterW.y; v[0][0].z <- gin[0].CenterW.z; 
                //   v[0][1].x <- gin[0].SizeW.x; v[0][1].y <- gin[0].SizeW.y; v[0][1].z <- gin[0].TexTess.x; v[0][1].w <- gin[0].TexTess.y; 
                //   x0 <- v
                //
                #line 92 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\Billboard.fx"
                mov r0.xyz, l(0,1.000000,0,0)  // r0.x <- up.x; r0.y <- up.y; r0.z <- up.z
                mov r1.xz, -v[0][0].xxzx  // r1.x <- look.x; r1.z <- look.z
                mov r1.y, l(0)  // r1.y <- look.y
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx
                mul r2.xyz, r0.yzxy, r1.zxyz
                mul r3.xyz, r0.zxyz, r1.yzxy
                mov r3.xyz, -r3.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- right.x; r2.y <- right.y; r2.z <- right.z
                mul r0.w, l(0.500000), v[0][1].x  // r0.w <- halfWidth
                
                #line 109
                itof r1.w, cb1[8].x
                add r1.w, r1.w, v[0][1].z
                mul r3.x, r1.w, cb1[8].z
                itof r1.w, cb1[8].y
                add r1.w, r1.w, v[0][1].w
                mul r3.y, r1.w, cb1[8].z
                itof r1.w, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.yzwx, s0, r1.w
                mov r1.w, -r1.w
                add r3.y, r1.w, v[0][0].y  // r3.y <- gin[0].CenterW.y
                
                #line 112
                mul r4.xyz, r2.xyzx, r0.wwww
                mov r3.xz, v[0][0].xxzx
                add r4.xyz, r3.xyzx, r4.xyzx
                mov r4.w, l(1.000000)
                mov x0[0].xyzw, r4.xyzw
                mul r4.xyz, r2.xyzx, r0.wwww
                add r4.xyz, r3.xyzx, r4.xyzx
                mul r5.xyz, r0.xyzx, v[0][1].yyyy
                mov r5.xyz, -r5.xyzx
                add r4.xyz, r4.xyzx, r5.xyzx
                mov r4.w, l(1.000000)
                mov x0[1].xyzw, r4.xyzw
                mul r4.xyz, r2.xyzx, r0.wwww
                mov r4.xyz, -r4.xyzx
                add r4.xyz, r3.xyzx, r4.xyzx
                mov r4.w, l(1.000000)
                mov x0[2].xyzw, r4.xyzw
                mul r2.xyz, r2.xyzx, r0.wwww
                mov r2.xyz, -r2.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mul r0.xyz, r0.xyzx, v[0][1].yyyy
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r2.xyzx
                mov r0.w, l(1.000000)
                mov x0[3].xyzw, r0.xyzw
                
                #line 121
                mov r0.xyzw, x0[0].xyzw
                dp4 r2.x, r0.xyzw, cb1[4].xyzw  // r2.x <- gout.PosH.x
                dp4 r2.y, r0.xyzw, cb1[5].xyzw  // r2.y <- gout.PosH.y
                dp4 r2.z, r0.xyzw, cb1[7].xyzw  // r2.z <- gout.PosH.w
                mul r0.x, r2.z, cb0[0].x
                add r0.x, r0.x, l(1.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, l(0.693147)
                mul r0.y, cb0[0].x, l(20000.000000)
                add r0.y, r0.y, l(1.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, l(0.693147)
                div r0.x, r0.x, r0.y
                mul r0.x, r2.z, r0.x  // r0.x <- gout.PosH.z
                mov r0.yzw, x0[0].xxyz  // r0.y <- gout.PosW.x; r0.z <- gout.PosW.y; r0.w <- gout.PosW.z
                mov r1.xyz, r1.xyzx  // r1.x <- gout.NormalW.x; r1.y <- gout.NormalW.y; r1.z <- gout.NormalW.z
                mov r3.xy, v[0][1].zwzz  // r3.x <- gout.TexTess.x; r3.y <- gout.TexTess.y
                mov r1.w, vPrim  // r1.w <- gout.PrimID
                mov o0.xyw, r2.xyxz
                mov o0.z, r0.x
                mov o1.xyz, r0.yzwy
                mov o2.xyz, r1.xyzx
                mov o3.x, r1.w
                mov o4.xy, r3.xyxx
                emit_stream m0
                
                #line 121
                mov r0.xyzw, x0[1].xyzw
                dp4 r2.x, r0.xyzw, cb1[4].xyzw
                dp4 r2.y, r0.xyzw, cb1[5].xyzw
                dp4 r2.z, r0.xyzw, cb1[7].xyzw
                mul r0.x, r2.z, cb0[0].x
                add r0.x, r0.x, l(1.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, l(0.693147)
                mul r0.y, cb0[0].x, l(20000.000000)
                add r0.y, r0.y, l(1.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, l(0.693147)
                div r0.x, r0.x, r0.y
                mul r0.x, r2.z, r0.x  // r0.x <- gout.PosH.z
                mov r0.yzw, x0[1].xxyz  // r0.y <- gout.PosW.x; r0.z <- gout.PosW.y; r0.w <- gout.PosW.z
                mov r3.xy, v[0][1].zwzz
                mov r1.w, vPrim
                mov o0.xyw, r2.xyxz
                mov o0.z, r0.x
                mov o1.xyz, r0.yzwy
                mov o2.xyz, r1.xyzx
                mov o3.x, r1.w
                mov o4.xy, r3.xyxx
                emit_stream m0
                
                #line 121
                mov r0.xyzw, x0[2].xyzw
                dp4 r2.x, r0.xyzw, cb1[4].xyzw
                dp4 r2.y, r0.xyzw, cb1[5].xyzw
                dp4 r2.z, r0.xyzw, cb1[7].xyzw
                mul r0.x, r2.z, cb0[0].x
                add r0.x, r0.x, l(1.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, l(0.693147)
                mul r0.y, cb0[0].x, l(20000.000000)
                add r0.y, r0.y, l(1.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, l(0.693147)
                div r0.x, r0.x, r0.y
                mul r0.x, r2.z, r0.x  // r0.x <- gout.PosH.z
                mov r0.yzw, x0[2].xxyz  // r0.y <- gout.PosW.x; r0.z <- gout.PosW.y; r0.w <- gout.PosW.z
                mov r3.xy, v[0][1].zwzz
                mov r1.w, vPrim
                mov o0.xyw, r2.xyxz
                mov o0.z, r0.x
                mov o1.xyz, r0.yzwy
                mov o2.xyz, r1.xyzx
                mov o3.x, r1.w
                mov o4.xy, r3.xyxx
                emit_stream m0
                
                #line 121
                mov r0.xyzw, x0[3].xyzw
                dp4 r2.x, r0.xyzw, cb1[4].xyzw
                dp4 r2.y, r0.xyzw, cb1[5].xyzw
                dp4 r2.z, r0.xyzw, cb1[7].xyzw
                mul r0.x, r2.z, cb0[0].x
                add r0.x, r0.x, l(1.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, l(0.693147)
                mul r0.y, cb0[0].x, l(20000.000000)
                add r0.y, r0.y, l(1.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, l(0.693147)
                div r0.x, r0.x, r0.y
                mul r0.x, r2.z, r0.x  // r0.x <- gout.PosH.z
                mov r0.yzw, x0[3].xxyz  // r0.y <- gout.PosW.x; r0.z <- gout.PosW.y; r0.w <- gout.PosW.z
                mov r3.xy, v[0][1].zwzz
                mov r1.w, vPrim
                mov o0.xyw, r2.xyxz
                mov o0.z, r0.x
                mov o1.xyz, r0.yzwy
                mov o2.xyz, r1.xyzx
                mov o3.x, r1.w
                mov o4.xy, r3.xyxx
                emit_stream m0
                ret 
                // Approximately 144 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float gRenderStart;                // Offset:    0 Size:     4 [unused]
                //   float gRenderEnd;                  // Offset:    4 Size:     4
                //   float3 gFogColor;                  // Offset:   16 Size:    12
                //   float gFogStart;                   // Offset:   28 Size:     4
                //   float gFogRange;                   // Offset:   32 Size:     4
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:   64 Size:    64 [unused]
                //   int2 gCoord;                       // Offset:  128 Size:     8
                //   float gSpacing;                    // Offset:  136 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samNormalMap                      sampler      NA          NA             s0      1 
                // samTreesMap                       sampler      NA          NA             s1      1 
                // gNormalMap                        texture  float4          2d             t0      1 
                // gTreesMap                         texture  float4          2d             t1      1 
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   x z 
                // NORMAL                   0   xyz         2     NONE   float       
                // SV_PrimitiveID           0   x           3   PRIMID    uint       
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[3], immediateIndexed
                dcl_constantbuffer CB1[9], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 3
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.PrimID; 
                //   v4.x <- pin.TexTess.x; v4.y <- pin.TexTess.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 133 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\Billboard.fx"
                mov r0.xyz, l(0.300000,1.000000,0.300000,0)  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z
                dp2 r0.w, v1.xzxx, v1.xzxx
                sqrt r0.w, r0.w  // r0.w <- distance
                itof r1.x, cb1[8].x
                add r1.x, r1.x, v4.x
                mul r1.x, r1.x, cb1[8].z
                itof r1.z, cb1[8].y
                add r1.z, r1.z, v4.y
                mul r1.y, r1.z, cb1[8].z
                itof r1.z, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t0.xyzw, s0, r1.z
                mov r2.xyz, l(-0.500000,-0.500000,-0.500000,-0.000000)
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z
                dp3 r1.x, l(0.000000, 1.000000, 0.000000, 0.000000), r1.xyzx  // r1.x <- Ang
                itof r1.y, cb1[8].x
                add r1.y, r1.y, v4.x
                mul r2.x, r1.y, cb1[8].z
                itof r1.y, cb1[8].y
                add r1.y, r1.y, v4.y
                mul r2.y, r1.y, cb1[8].z
                itof r1.y, l(0)
                sample_l_indexable(texture2d)(float,float,float,float) r1.y, r2.xyxx, t1.yxzw, s1, r1.y
                mov r1.y, r1.y  // r1.y <- T
                lt r1.y, r1.y, l(0.500000)
                lt r1.x, r1.x, l(0.700000)
                or r1.x, r1.x, r1.y
                lt r1.y, cb0[0].y, r0.w
                or r1.x, r1.y, r1.x
                if_nz r1.x
                
                #line 144
                  lt r1.x, l(-0.050000), l(0.000000)
                  and r1.x, r1.x, l(-1)
                  discard_nz r1.x
                endif 
                lt r1.x, cb0[1].w, r0.w
                if_nz r1.x
                  mov r1.x, -cb0[1].w
                  add r1.x, r0.w, r1.x
                  div r1.x, r1.x, cb0[2].x
                  mov r1.yzw, -r0.xxyz
                  add r1.yzw, r1.yyzw, cb0[1].xxyz
                  mul r1.xyz, r1.yzwy, r1.xxxx
                  add r1.xyz, r0.xyzx, r1.xyzx
                  max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                  min r0.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  add r1.x, cb0[1].w, cb0[2].x
                  lt r0.w, r1.x, r0.w
                  if_nz r0.w
                    max r1.xyz, cb0[1].xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                    min r0.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  endif 
                endif 
                
                #line 156
                mov o0.xyz, r0.xyzx
                mov o0.w, l(1.000000)
                ret 
                // Approximately 55 instruction slots used
                            
            };
        }

    }

}

