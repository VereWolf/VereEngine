//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer $Globals
{
    float   c = 0.100000001;            // Offset:    0, size:    4
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldN;                   // Offset:   64, size:   64
    float4x4 gViewProj;                 // Offset:  128, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  192, size:   64
    float3  gEyePosW;                   // Offset:  256, size:   12
    Material gMaterial;                 // Offset:  272, size:   64
    bool    gIsDiffuseMap;              // Offset:  336, size:    4
    bool    gIsSpecularMap;             // Offset:  340, size:    4
    bool    gIsNormalMap;               // Offset:  344, size:    4
}

//
// 4 local object(s)
//
Texture2D gDiffuseMap;
Texture2D gSpecularMap;
Texture2D gNormalMap;
SamplerState samState
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 LightTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer $Globals
                // {
                //
                //   float c;                           // Offset:    0 Size:     4
                //      = 0x3dcccccd 
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldN;                  // Offset:   64 Size:    64
                //   float4x4 gViewProj;                // Offset:  128 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  192 Size:    64 [unused]
                //   float3 gEyePosW;                   // Offset:  256 Size:    12 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  272
                //       float4 diffuse;                // Offset:  288
                //       float4 specular;               // Offset:  304
                //       float4 reflect;                // Offset:  320
                //
                //   } gMaterial;                       // Offset:  272 Size:    64 [unused]
                //   bool gIsDiffuseMap;                // Offset:  336 Size:     4 [unused]
                //   bool gIsSpecularMap;               // Offset:  340 Size:     4 [unused]
                //   bool gIsNormalMap;                 // Offset:  344 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // $Globals                          cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TANGENT                  0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TANGENT                  0   xyz         2     NONE   float   xyz 
                // NORMAL                   0   xyz         3     NONE   float   xyz 
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[1], immediateIndexed
                dcl_constantbuffer CB1[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyz
                dcl_input v3.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tan.x; v1.y <- vin.Tan.y; v1.z <- vin.Tan.z; 
                //   v2.x <- vin.Normal.x; v2.y <- vin.Normal.y; v2.z <- vin.Normal.z; 
                //   v3.x <- vin.Tex.x; v3.y <- vin.Tex.y; 
                //   o4.x <- <VS return value>.Tex.x; o4.y <- <VS return value>.Tex.y; 
                //   o3.x <- <VS return value>.Normal.x; o3.y <- <VS return value>.Normal.y; o3.z <- <VS return value>.Normal.z; 
                //   o2.x <- <VS return value>.Tan.x; o2.y <- <VS return value>.Tan.y; o2.z <- <VS return value>.Tan.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 52 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\PosNormalTexTan.fx"
                mov r0.xyz, v1.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb1[0].xyzw  // r1.x <- vout.Tan.x
                dp4 r1.y, r0.xyzw, cb1[1].xyzw  // r1.y <- vout.Tan.y
                dp4 r1.z, r0.xyzw, cb1[2].xyzw  // r1.z <- vout.Tan.z
                mov r0.xyz, v2.xyzx
                mov r0.w, l(1.000000)
                dp4 r2.x, r0.xyzw, cb1[4].xyzw  // r2.x <- vout.Normal.x
                dp4 r2.y, r0.xyzw, cb1[5].xyzw  // r2.y <- vout.Normal.y
                dp4 r2.z, r0.xyzw, cb1[6].xyzw  // r2.z <- vout.Normal.z
                
                #line 58
                mov r0.xy, v3.xyxx  // r0.x <- vout.Tex.x; r0.y <- vout.Tex.y
                mov r3.xyz, v0.xyzx
                mov r3.w, l(1.000000)
                dp4 r4.x, r3.xyzw, cb1[0].xyzw  // r4.x <- vout.PosW.x
                dp4 r4.y, r3.xyzw, cb1[1].xyzw  // r4.y <- vout.PosW.y
                dp4 r4.z, r3.xyzw, cb1[2].xyzw  // r4.z <- vout.PosW.z
                mov r4.w, l(1.000000)
                dp4 r3.x, r4.xyzw, cb1[8].xyzw  // r3.x <- vout.PosH.x
                dp4 r3.y, r4.xyzw, cb1[9].xyzw  // r3.y <- vout.PosH.y
                dp4 r3.w, r4.xyzw, cb1[11].xyzw  // r3.w <- vout.PosH.w
                mul r0.z, r3.w, cb0[0].x
                add r0.z, r0.z, l(1.000000)
                log r0.z, r0.z
                mul r0.z, r0.z, l(0.693147)
                mul r0.w, cb0[0].x, l(20000.000000)
                add r0.w, r0.w, l(1.000000)
                log r0.w, r0.w
                mul r0.w, r0.w, l(0.693147)
                div r0.z, r0.z, r0.w
                mul r0.z, r3.w, r0.z  // r0.z <- vout.PosH.z
                mov o0.xyw, r3.xyxw
                mov o0.z, r0.z
                mov o1.xyz, r4.xyzx
                mov o2.xyz, r1.xyzx
                mov o3.xyz, r2.xyzx
                mov o4.xy, r0.xyxx
                ret 
                // Approximately 37 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldN;                  // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewProj;                // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  192 Size:    64 [unused]
                //   float3 gEyePosW;                   // Offset:  256 Size:    12
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  272
                //       float4 diffuse;                // Offset:  288
                //       float4 specular;               // Offset:  304
                //       float4 reflect;                // Offset:  320
                //
                //   } gMaterial;                       // Offset:  272 Size:    64 [unused]
                //   bool gIsDiffuseMap;                // Offset:  336 Size:     4
                //   bool gIsSpecularMap;               // Offset:  340 Size:     4
                //   bool gIsNormalMap;                 // Offset:  344 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samState                          sampler      NA          NA             s0      1 
                // gDiffuseMap                       texture  float4          2d             t0      1 
                // gSpecularMap                      texture  float4          2d             t1      1 
                // gNormalMap                        texture  float4          2d             t2      1 
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // TANGENT                  0   xyz         2     NONE   float   xyz 
                // NORMAL                   0   xyz         3     NONE   float   xyz 
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 14
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.Tan.x; v2.y <- pin.Tan.y; v2.z <- pin.Tan.z; 
                //   v3.x <- pin.Normal.x; v3.y <- pin.Normal.y; v3.z <- pin.Normal.z; 
                //   v4.x <- pin.Tex.x; v4.y <- pin.Tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 74 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\PosNormalTexTan.fx"
                mov r0.xyzw, l(0.400000,0.400000,0.400000,1.000000)  // r0.x <- light.ambient.x; r0.y <- light.ambient.y; r0.z <- light.ambient.z; r0.w <- light.ambient.w
                mov r1.xyzw, l(0.500000,0.500000,0.500000,1.000000)  // r1.x <- light.diffuse.x; r1.y <- light.diffuse.y; r1.z <- light.diffuse.z; r1.w <- light.diffuse.w
                mov r2.xyzw, l(0.200000,0.200000,0.200000,1.000000)  // r2.x <- light.specular.x; r2.y <- light.specular.y; r2.z <- light.specular.z; r2.w <- light.specular.w
                mov r3.xyz, l(0.590451,0.550214,0.590451,0)  // r3.x <- light.direction.x; r3.y <- light.direction.y; r3.z <- light.direction.z
                
                #line 80
                ine r3.w, l(0, 0, 0, 0), cb0[21].x
                if_nz r3.w
                  mov r4.y, -v4.y
                  mov r4.x, v4.x
                  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t0.xyzw, s0  // r4.x <- mat.ambient.x; r4.y <- mat.ambient.y; r4.z <- mat.ambient.z; r4.w <- mat.ambient.w
                else 
                
                #line 86
                  mov r4.xyzw, l(0.800000,0.800000,0.800000,1.000000)  // r4.x <- mat.ambient.x; r4.y <- mat.ambient.y; r4.z <- mat.ambient.z; r4.w <- mat.ambient.w
                endif 
                mov r5.xyzw, l(0.800000,0.800000,0.800000,1.000000)  // r5.x <- mat.diffuse.x; r5.y <- mat.diffuse.y; r5.z <- mat.diffuse.z; r5.w <- mat.diffuse.w
                ine r3.w, l(0, 0, 0, 0), cb0[21].y
                if_nz r3.w
                  mov r6.y, -v4.y
                  mov r6.x, v4.x
                  sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r6.xyxx, t1.xyzw, s0  // r6.x <- mat.specular.x; r6.y <- mat.specular.y; r6.z <- mat.specular.z; r6.w <- mat.specular.w
                else 
                
                #line 97
                  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // r6.x <- mat.specular.x; r6.y <- mat.specular.y; r6.z <- mat.specular.z; r6.w <- mat.specular.w
                endif 
                ine r3.w, l(0, 0, 0, 0), cb0[21].z
                if_nz r3.w
                  nop 
                  mov r4.xyzw, r4.xyzw
                  mov r5.xyzw, r5.xyzw
                  mov r6.xyzw, r6.xyzw
                  mov r0.xyzw, r0.xyzw
                  mov r1.xyzw, r1.xyzw
                  mov r2.xyzw, r2.xyzw
                  mov r3.xyz, r3.xyzx
                  nop 
                  mov r7.y, -v4.y
                  mov r7.x, v4.x
                  sample_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t2.xyzw, s0
                  mov r8.xyz, v3.zxyz
                  mov r9.xyz, v2.yzxy
                
                #line 57 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\LightHelper.fx"
                  mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                  mov r10.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
                  add r7.xyz, r7.xyzx, r10.xyzx  // r7.x <- normalT.x; r7.y <- normalT.y; r7.z <- normalT.z
                  dp3 r3.w, r8.xyzx, r8.xyzx
                  rsq r3.w, r3.w
                  mul r8.xyz, r3.wwww, r8.xyzx  // r8.x <- N.z; r8.y <- N.x; r8.z <- N.y
                  dp3 r3.w, r9.yzxy, r8.xyzx
                  mul r10.xyz, r8.zxyz, r3.wwww
                  mov r10.xyz, -r10.xyzx
                  add r9.xyz, r9.xyzx, r10.xyzx
                  dp3 r3.w, r9.xyzx, r9.xyzx
                  rsq r3.w, r3.w
                  mul r9.xyz, r3.wwww, r9.xyzx  // r9.x <- T.y; r9.y <- T.z; r9.z <- T.x
                  mul r10.xyz, r8.zxyz, r9.yzxy
                  mul r11.xyz, r8.xyzx, r9.xyzx
                  mov r11.xyz, -r11.xyzx
                  add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- B.x; r10.y <- B.y; r10.z <- B.z
                  mov r11.x, r9.z  // r11.x <- TBN._m00
                  mov r11.y, r8.y  // r11.y <- TBN._m10
                  mov r11.z, r10.x  // r11.z <- TBN._m20
                  mov r12.x, r9.x  // r12.x <- TBN._m01
                  mov r12.y, r8.z  // r12.y <- TBN._m11
                  mov r12.z, r10.y  // r12.z <- TBN._m21
                  mov r10.x, r9.y  // r10.x <- TBN._m02
                  mov r10.y, r8.x  // r10.y <- TBN._m12
                  mov r10.z, r10.z  // r10.z <- TBN._m22
                  dp3 r8.x, r7.xyzx, r11.xyzx  // r8.x <- bumpedNormalW.x
                  dp3 r8.y, r7.xyzx, r12.xyzx  // r8.y <- bumpedNormalW.y
                  dp3 r8.z, r7.xyzx, r10.xyzx  // r8.z <- bumpedNormalW.z
                  mov r8.xyz, r8.xyzx  // r8.x <- <NormalSampleToWorldSpace return value>.x; r8.y <- <NormalSampleToWorldSpace return value>.y; r8.z <- <NormalSampleToWorldSpace return value>.z
                
                #line 102 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\PosNormalTexTan.fx"
                  mov r8.xyz, r8.xyzx
                  mov r7.xyz, cb0[16].xyzx
                
                #line 76 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\LightHelper.fx"
                  mov r9.xyzw, l(0,0,0,0)  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z; r9.w <- diffuse.w
                  mov r10.xyzw, l(0,0,0,0)  // r10.x <- spec.x; r10.y <- spec.y; r10.z <- spec.z; r10.w <- spec.w
                  mov r11.xyz, -r3.xyzx  // r11.x <- lightVec.x; r11.y <- lightVec.y; r11.z <- lightVec.z
                  mul r12.xyzw, r0.xyzw, r4.xyzw  // r12.x <- ambient.x; r12.y <- ambient.y; r12.z <- ambient.z; r12.w <- ambient.w
                  dp3 r3.w, r11.xyzx, r8.xyzx  // r3.w <- diffuseFactor
                  mul r3.w, r3.w, r3.w
                
                #line 88
                  lt r7.w, l(0.000000), r3.w
                  mov r11.xyz, -r11.xyzx
                  dp3 r8.w, r11.xyzx, r8.xyzx
                  add r8.w, r8.w, r8.w
                  mov r8.w, -r8.w
                  mul r8.xyz, r8.wwww, r8.xyzx
                  add r8.xyz, r11.xyzx, r8.xyzx  // r8.x <- v.x; r8.y <- v.y; r8.z <- v.z
                  dp3 r7.x, r8.xyzx, r7.xyzx
                  max r7.x, r7.x, l(0.000000)
                  log r7.x, r7.x
                  mul r7.x, r6.w, r7.x
                  exp r7.x, r7.x  // r7.x <- specFactor
                  mul r8.xyzw, r5.xyzw, r3.wwww
                  mul r8.xyzw, r1.xyzw, r8.xyzw  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z; r8.w <- diffuse.w
                  mul r11.xyzw, r6.xyzw, r7.xxxx
                  mul r11.xyzw, r2.xyzw, r11.xyzw  // r11.x <- spec.x; r11.y <- spec.y; r11.z <- spec.z; r11.w <- spec.w
                  movc r8.xyzw, r7.wwww, r8.xyzw, r9.xyzw
                  movc r7.xyzw, r7.wwww, r11.xyzw, r10.xyzw  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z; r7.w <- spec.w
                
                #line 102 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\PosNormalTexTan.fx"
                  mov r12.xyzw, r12.xyzw  // r12.x <- ambient.x; r12.y <- ambient.y; r12.z <- ambient.z; r12.w <- ambient.w
                  mov r8.xyzw, r8.xyzw  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z; r8.w <- diffuse.w
                  mov r7.xyzw, r7.xyzw  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z; r7.w <- spec.w
                
                #line 108
                else 
                
                #line 111
                  nop 
                  mov r4.xyzw, r4.xyzw
                  mov r5.xyzw, r5.xyzw
                  mov r6.xyzw, r6.xyzw
                  mov r0.xyzw, r0.xyzw
                  mov r1.xyzw, r1.xyzw
                  mov r2.xyzw, r2.xyzw
                  mov r3.xyz, r3.xyzx
                  mov r9.xyz, v3.xyzx
                  dp3 r3.w, cb0[16].xyzx, cb0[16].xyzx
                  rsq r3.w, r3.w
                  mul r10.xyz, r3.wwww, cb0[16].xyzx
                
                #line 76 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\LightHelper.fx"
                  mov r11.xyzw, l(0,0,0,0)  // r11.x <- diffuse.x; r11.y <- diffuse.y; r11.z <- diffuse.z; r11.w <- diffuse.w
                  mov r13.xyzw, l(0,0,0,0)  // r13.x <- spec.x; r13.y <- spec.y; r13.z <- spec.z; r13.w <- spec.w
                  mov r3.xyz, -r3.xyzx  // r3.x <- lightVec.x; r3.y <- lightVec.y; r3.z <- lightVec.z
                  mul r12.xyzw, r0.xyzw, r4.xyzw  // r12.x <- ambient.x; r12.y <- ambient.y; r12.z <- ambient.z; r12.w <- ambient.w
                  dp3 r0.x, r3.xyzx, r9.xyzx  // r0.x <- diffuseFactor
                  mul r0.x, r0.x, r0.x
                
                #line 88
                  lt r0.y, l(0.000000), r0.x
                  mov r3.xyz, -r3.xyzx
                  dp3 r0.z, r3.xyzx, r9.xyzx
                  add r0.z, r0.z, r0.z
                  mov r0.z, -r0.z
                  mul r9.xyz, r0.zzzz, r9.xyzx
                  add r3.xyz, r3.xyzx, r9.xyzx  // r3.x <- v.x; r3.y <- v.y; r3.z <- v.z
                  dp3 r0.z, r3.xyzx, r10.xyzx
                  max r0.z, r0.z, l(0.000000)
                  log r0.z, r0.z
                  mul r0.z, r0.z, r6.w
                  exp r0.z, r0.z  // r0.z <- specFactor
                  mul r3.xyzw, r5.xyzw, r0.xxxx
                  mul r1.xyzw, r1.xyzw, r3.xyzw  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z; r1.w <- diffuse.w
                  mul r3.xyzw, r6.xyzw, r0.zzzz
                  mul r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- spec.x; r2.y <- spec.y; r2.z <- spec.z; r2.w <- spec.w
                  movc r8.xyzw, r0.yyyy, r1.xyzw, r11.xyzw  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z; r8.w <- diffuse.w
                  movc r7.xyzw, r0.yyyy, r2.xyzw, r13.xyzw  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z; r7.w <- spec.w
                
                #line 111 "C:\Users\VereWolf\Documents\VereEngine\VereEngine_Build_2017_03_02\VereEngine\VereEngine\FX\PosNormalTexTan.fx"
                  mov r12.xyzw, r12.xyzw  // r12.x <- ambient.x; r12.y <- ambient.y; r12.z <- ambient.z; r12.w <- ambient.w
                  mov r8.xyzw, r8.xyzw  // r8.x <- diffuse.x; r8.y <- diffuse.y; r8.z <- diffuse.z; r8.w <- diffuse.w
                  mov r7.xyzw, r7.xyzw  // r7.x <- spec.x; r7.y <- spec.y; r7.z <- spec.z; r7.w <- spec.w
                
                #line 117
                endif 
                mov r0.x, l(-0.100000)
                add r0.x, r0.x, r4.w
                lt r0.x, r0.x, l(0.000000)
                and r0.x, r0.x, l(-1)
                discard_nz r0.x
                mul r0.xyzw, r4.xyzw, r8.xyzw
                add r0.xyzw, r0.xyzw, r12.xyzw
                add r0.xyzw, r7.xyzw, r0.xyzw  // r0.x <- ambient.x; r0.y <- ambient.y; r0.z <- ambient.z; r0.w <- ambient.w
                
                #line 125
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 147 instruction slots used
                            
            };
        }

    }

}

